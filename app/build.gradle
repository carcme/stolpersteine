buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "me.carc.stolpersteine"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 4
        versionName "1.4"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        android.defaultConfig.vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        multiDexEnabled true
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"

            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            useProguard false
        }
        release {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"

            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

    lintOptions {
//        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds, but continue the build even when errors are found:
        abortOnError false
    }
}

ext {
    supportLibVersion = '27.1.1'
    supportAnnotations = '27.1.1'
    constraintLayoutVersion = '1.1.3'

    butterknife = '8.8.1'

    osmdroid = '6.0.2'

    glide = '4.7.1'

    retrofit = '2.4.0'
    okhttp = '3.8.0'

    gsonVersion = '2.8.2'

    roomVersion = '1.1.1'
    lifecycle_version = '1.1.1'

    DAGGER_VERSION = '2.8'

    RXJAVA = '2.1.8'
    RXANDROID = '2.0.1'
    RXLIFECYCLE = '2.2.1'
    RXPERMISSIONS = '0.9.5@aar'

    leakcanary = '1.5.4'
    robolectric = '3.5.1'
    mockito = '2.12.0'
}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$supportAnnotations"
        force "com.android.support:support-compat:${supportLibVersion}"
    }
}

dependencies {
    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    implementation fileTree(dir: 'libs', include: ['*.jar'])


    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
//    implementation "com.android.support:support-compat:${supportLibVersion}"

    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:support-v13:${supportLibVersion}"
    implementation "com.android.support:recyclerview-v7:${supportLibVersion}"
    implementation "com.android.support:cardview-v7:${supportLibVersion}"
    implementation "com.android.support:preference-v14:${supportLibVersion}"
//    implementation "com.android.support:animated-vector-drawable:${supportLibVersion}"
//    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    // Butterknife
    implementation "com.jakewharton:butterknife:$butterknife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknife"

    // Osm Map
    implementation "org.osmdroid:osmdroid-android:$osmdroid"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"

    // Retrofit & GSON
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Room
    implementation "android.arch.persistence.room:runtime:$roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$roomVersion"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"

    implementation "android.arch.paging:runtime:1.0.0"

    // Dagger
    implementation "com.google.dagger:dagger:$DAGGER_VERSION"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    annotationProcessor daggerCompiler
    testAnnotationProcessor daggerCompiler
    androidTestAnnotationProcessor daggerCompiler

    // Easy Permissions
    implementation 'pub.devrel:easypermissions:1.0.0'

    // JSOUP
    implementation 'org.jsoup:jsoup:1.11.3'
    implementation 'com.github.fcannizzaro:jsoup-annotations:1.0.3'

    // ABOUT LIB
    implementation "com.mikepenz:aboutlibraries:6.0.8"

    // Flow Text - test it out :)
//    implementation 'com.github.deano2390:FlowTextView:2.0.5'
//    implementation 'su.whs:wATLlib:1.2.3'


    // Testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true;
    }
}
